
HWSWE_U5A1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000118  08000298  08000298  00010298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003b0  080003b8  000103b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  080003b0  080003b0  000103b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  080003b4  080003b4  000103b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  20000000  20000000  000103b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  20000000  080003b8  00020000  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  2000001c  080003b8  0002001c  2**0
                  ALLOC
  8 .ARM.attributes 0000002e  00000000  00000000  000103b8  2**0
                  CONTENTS, READONLY
  9 .debug_line   000000ce  00000000  00000000  000103e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_info   00000048  00000000  00000000  000104b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 00000026  00000000  00000000  000104fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 00000048  00000000  00000000  00010528  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    0000007f  00000000  00000000  00010570  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_ranges 00000020  00000000  00000000  000105f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_frame  0000002c  00000000  00000000  00010610  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000298 <__do_global_dtors_aux>:
 8000298:	b510      	push	{r4, lr}
 800029a:	4c05      	ldr	r4, [pc, #20]	; (80002b0 <__do_global_dtors_aux+0x18>)
 800029c:	7823      	ldrb	r3, [r4, #0]
 800029e:	b933      	cbnz	r3, 80002ae <__do_global_dtors_aux+0x16>
 80002a0:	4b04      	ldr	r3, [pc, #16]	; (80002b4 <__do_global_dtors_aux+0x1c>)
 80002a2:	b113      	cbz	r3, 80002aa <__do_global_dtors_aux+0x12>
 80002a4:	4804      	ldr	r0, [pc, #16]	; (80002b8 <__do_global_dtors_aux+0x20>)
 80002a6:	f3af 8000 	nop.w
 80002aa:	2301      	movs	r3, #1
 80002ac:	7023      	strb	r3, [r4, #0]
 80002ae:	bd10      	pop	{r4, pc}
 80002b0:	20000000 	.word	0x20000000
 80002b4:	00000000 	.word	0x00000000
 80002b8:	08000398 	.word	0x08000398

080002bc <frame_dummy>:
 80002bc:	b508      	push	{r3, lr}
 80002be:	4b03      	ldr	r3, [pc, #12]	; (80002cc <frame_dummy+0x10>)
 80002c0:	b11b      	cbz	r3, 80002ca <frame_dummy+0xe>
 80002c2:	4903      	ldr	r1, [pc, #12]	; (80002d0 <frame_dummy+0x14>)
 80002c4:	4803      	ldr	r0, [pc, #12]	; (80002d4 <frame_dummy+0x18>)
 80002c6:	f3af 8000 	nop.w
 80002ca:	bd08      	pop	{r3, pc}
 80002cc:	00000000 	.word	0x00000000
 80002d0:	20000004 	.word	0x20000004
 80002d4:	08000398 	.word	0x08000398

080002d8 <main>:
 *
 * @param       none
 * @return      none
 */
main:
    MOV     r0,#0               @ clear r0
 80002d8:	f04f 0000 	mov.w	r0, #0

080002dc <loop>:
/**
 * endless loop
 */
loop:
/*  instruction                 result after executing the instruction */
    MOV     r0,#2               @ r0 = 0x00000002
 80002dc:	f04f 0002 	mov.w	r0, #2
    SUBS    r0,#1               @ r0 = 0x00000001, flags set to: 00100
 80002e0:	3801      	subs	r0, #1
    SUBS    r0,#1               @ r0 = 0x00000000, flags set to: 01100
 80002e2:	3801      	subs	r0, #1
    SUBS    r0,#1               @ r0 = 0xFFFFFFFF, flags set to: 10000
 80002e4:	3801      	subs	r0, #1
    SUBS    r0,#1               @ r0 = 0xFFFFFFFE, flags set to: 10100
 80002e6:	3801      	subs	r0, #1
    ADDS    r0,#1               @ r0 = 0xFFFFFFFF, flags set to: 10000
 80002e8:	3001      	adds	r0, #1
    ADDS    r0,#1               @ r0 = 0x00000000, flags set to: 01100
 80002ea:	3001      	adds	r0, #1
    ADDS    r0,#1               @ r0 = 0x00000001, flags set to: 00000
 80002ec:	3001      	adds	r0, #1

    LDR     r1,=0x20000000      @ load r1 with address 0x20000000 (int. SRAM)
 80002ee:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
    LDR     r0,=0x12345678      @ load r0 with value 0x12345678
 80002f2:	4801      	ldr	r0, [pc, #4]	; (80002f8 <loop+0x1c>)
    STR     r0,[r1]             @ store value of r0 in address pointed to by r1
 80002f4:	6008      	str	r0, [r1, #0]
    B       loop
 80002f6:	e7f1      	b.n	80002dc <loop>
    LDR     r0,=0x12345678      @ load r0 with value 0x12345678
 80002f8:	12345678 	.word	0x12345678

080002fc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002fc:	480d      	ldr	r0, [pc, #52]	; (8000334 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002fe:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000300:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000304:	480c      	ldr	r0, [pc, #48]	; (8000338 <LoopForever+0x6>)
  ldr r1, =_edata
 8000306:	490d      	ldr	r1, [pc, #52]	; (800033c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000308:	4a0d      	ldr	r2, [pc, #52]	; (8000340 <LoopForever+0xe>)
  movs r3, #0
 800030a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800030c:	e002      	b.n	8000314 <LoopCopyDataInit>

0800030e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800030e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000310:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000312:	3304      	adds	r3, #4

08000314 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000314:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000316:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000318:	d3f9      	bcc.n	800030e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800031a:	4a0a      	ldr	r2, [pc, #40]	; (8000344 <LoopForever+0x12>)
  ldr r4, =_ebss
 800031c:	4c0a      	ldr	r4, [pc, #40]	; (8000348 <LoopForever+0x16>)
  movs r3, #0
 800031e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000320:	e001      	b.n	8000326 <LoopFillZerobss>

08000322 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000322:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000324:	3204      	adds	r2, #4

08000326 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000326:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000328:	d3fb      	bcc.n	8000322 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800032a:	f000 f811 	bl	8000350 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800032e:	f7ff ffd3 	bl	80002d8 <main>

08000332 <LoopForever>:

LoopForever:
    b LoopForever
 8000332:	e7fe      	b.n	8000332 <LoopForever>
  ldr   r0, =_estack
 8000334:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000338:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800033c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000340:	080003b8 	.word	0x080003b8
  ldr r2, =_sbss
 8000344:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000348:	2000001c 	.word	0x2000001c

0800034c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800034c:	e7fe      	b.n	800034c <ADC1_2_IRQHandler>
	...

08000350 <__libc_init_array>:
 8000350:	b570      	push	{r4, r5, r6, lr}
 8000352:	4d0d      	ldr	r5, [pc, #52]	; (8000388 <__libc_init_array+0x38>)
 8000354:	4c0d      	ldr	r4, [pc, #52]	; (800038c <__libc_init_array+0x3c>)
 8000356:	1b64      	subs	r4, r4, r5
 8000358:	10a4      	asrs	r4, r4, #2
 800035a:	2600      	movs	r6, #0
 800035c:	42a6      	cmp	r6, r4
 800035e:	d109      	bne.n	8000374 <__libc_init_array+0x24>
 8000360:	4d0b      	ldr	r5, [pc, #44]	; (8000390 <__libc_init_array+0x40>)
 8000362:	4c0c      	ldr	r4, [pc, #48]	; (8000394 <__libc_init_array+0x44>)
 8000364:	f000 f818 	bl	8000398 <_init>
 8000368:	1b64      	subs	r4, r4, r5
 800036a:	10a4      	asrs	r4, r4, #2
 800036c:	2600      	movs	r6, #0
 800036e:	42a6      	cmp	r6, r4
 8000370:	d105      	bne.n	800037e <__libc_init_array+0x2e>
 8000372:	bd70      	pop	{r4, r5, r6, pc}
 8000374:	f855 3b04 	ldr.w	r3, [r5], #4
 8000378:	4798      	blx	r3
 800037a:	3601      	adds	r6, #1
 800037c:	e7ee      	b.n	800035c <__libc_init_array+0xc>
 800037e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000382:	4798      	blx	r3
 8000384:	3601      	adds	r6, #1
 8000386:	e7f2      	b.n	800036e <__libc_init_array+0x1e>
 8000388:	080003b0 	.word	0x080003b0
 800038c:	080003b0 	.word	0x080003b0
 8000390:	080003b0 	.word	0x080003b0
 8000394:	080003b4 	.word	0x080003b4

08000398 <_init>:
 8000398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800039a:	bf00      	nop
 800039c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800039e:	bc08      	pop	{r3}
 80003a0:	469e      	mov	lr, r3
 80003a2:	4770      	bx	lr

080003a4 <_fini>:
 80003a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003a6:	bf00      	nop
 80003a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003aa:	bc08      	pop	{r3}
 80003ac:	469e      	mov	lr, r3
 80003ae:	4770      	bx	lr
